'use strict';
// Задание 1:
// 1. Создайте массив с элементами 1, 2, 3. 
// Выведите на экран каждый из этих элементов.
// const arr = [1, 2, 3];
// console.log(`arr: ${arr}`);
// console.log(`arr.1: ${arr[0]}`);
// console.log(`arr.2: ${arr[1]}`);
 
// 2. Создайте массив с произвольными элементами. 
// Выведите на экран количество элементов в этом массиве.
// const arr1 = [1, 'qwerty', 5.3];
// console.log(`arr size: ${arr1.length}`);
 
// 3. Создайте массив с элементами 'a', 'b', 'c'. Запишите вместо первого элемента 
// число 1, вместо второго - 2, вместо третьего - 3.
// const arr2 = ['a', 'b', 'c'];
// arr2[0] = 1;
// arr2[1] = 2;
// arr2[2] = 3;
// console.log(`arr2: ${arr2}`);
 
 
 
// Задание 2:
// 1. Создайте массив с элементами 1, 2 и 3. С помощью оператора ++ увеличьте 
// каждый элемент массива на единицу.
// const arr3 = [1, 2, 3];
// arr3[0]++;
// arr3[1]++;
// arr3[2]++;
// console.log(`arr3: ${arr3}`);
 
// 2. Узнайте длину следующего массива и объясните почему такое значение:
// ```
// const arr = [];
// arr[3] = 'a';
// arr[8] = 'b';
// ```
// const arr = [];
// arr[3] = 'a';
// arr[8] = 'b';   // Никогда так не делай.
// console.log(`arr length: ${arr.length}`);
// console.log(`arr[5]: ${arr[5]}`);   // undefined
// const arr3 = [1, 2, 3];
// arr3.length = 4;
// console.log(`arr3: ${arr3}`);
 
// 3. Пусть дан такой массив: `[1, 2, 3]`. Добавьте ему в конец элементы 4 и 5.
// const arr4 = [1, 2, 3];
// arr4.push(4);
// arr4.push(5);
// // arr4.push(4,5); // Альтернативный способ.
// console.log(`arr4: ${arr4}`);
 
// 4. Создайте произвольный массив из 5 элементов, удалите из него два элемента.
// Проверьте, какое станет значение свойства length после этого.
// const arr4 = [1, 2, 3, 4, 5];
// // delete arr[1];
// // delete arr[3];
// arr4.splice(1, 2); // =>[ 1, 4, 5 ]
// arr4.splice(3, 1); // =>[ 1, 4, 5 ] - получается ничего не удаляем.
// arr4.splice(1, 0, 100, 200); // Начиная с индекса 1, ничего не удаляем, но вставляем 100 и 200.
// console.log(`arr: ${arr4}`);
 
 
// Задание 3:
// 1. С помощью цикла for выведите в консоль числа от 11 до 33.
// for (let i = 11; i < 34; i++) {
//     console.log(i);
// }
 
// 2. С помощью цикла for выведите в консоль нечетные числа в промежутке от 1 
// до 100 включительно.
// for (let i = 1; i <= 100; i++) {
//     if (i%2 != 0) {
//         console.log(i);
//     }
// }
 
// 3. С помощью цикла for выведите в консоль числа от 100 до 0.
// for (let i = 100; i >= 0; i--) {
//     console.log(i);
// }
 
// 4. Создать переменную с заданным числом. Умножайте число на 3 столько раз, 
// пока результат умножения не станет больше 1000. Какое число получится? 
// Посчитайте количество итераций, необходимых для этого.
// let x = 2;
// let i = 0;
// console.log(`x = ${x}`);
// while (x <= 1000) {
//     x *= 3;
//     i += 1;
//     console.log(`x = ${x}`);
// }
// console.log(`Iteration count: ${i}`);
 
 
// Задание 4:
// 1. Создать массив `[2, 5, 9, 15, 1, 4]`.
// Выведите в консоль те элементы массива, которые больше 3-х, но меньше 10.
// const arr = [2, 5, 9, 15, 1, 4];
// for (let i = 0; i < arr.length; i++) {
//     if (arr[i] > 3 && arr[i] < 10) {
//         console.log(`Element: ${arr[i]}`);
//     }
// }
 
// 2. Найдите сумму четных чисел от 2 до 100.
// let sum = 0;
// for (let i = 2; i <= 100; i++ ) {
//     if (i%2 === 0) {
//         sum += i;
//         //console.log(`->${sum}`);
//     }
// }
// console.log(`Sum: ${sum}`);
 
// 3. Создать массив `[2, 5, 9, 3, 1, 4]`.
// Найдите сумму элементов этого массива.
// const arr = [2, 5, 9, 3, 1, 4];
// let sum = 0;
// for (i = 0; i < arr.length; i++) {
//     sum += arr[i];
// }
// console.log(`Sum: ${sum}`);
 
// 4. С помощью цикла сформируйте строку '-1-2-3-4-5-6-7-8-9-'.
// let str = "-";
// for (i = 1; i < 10; i++) {
//     str = str + i + "-";
// }
// console.log(str);
 
// 5. Создать массив `[2, 5, 9, 0, 3, 1, 4]`.
// Запустите цикл, который будет по очереди выводить элементы этого массива в 
// консоль до тех пор, пока не встретится элемент со значением 0. После этого 
// цикл должен завершить свою работу.
// const arr = [2, 5, 9, 0, 3, 1, 4];
// for (i = 0; i < arr.length; i++) {
//     if (arr[i] === 0) {
//         break;
//     }
//     console.log(arr[i]);
// }
 
 
// Задание 5:
// 1. Создать массив из 10 случайных чисел от 0 до 100 включительно.
// console.log(Math.floor(Math.random()*100));
// const arr = [];
// for (let i = 0; i < 10; i++) {
//     arr.push(Math.floor(Math.random()*100));
// }
// console.log(`Arr: ${arr}`);
// // Наобходимо вывести в консоль все числа, которые делятся и на 2, и на 3.
// for (let i = 0; i < arr.length; i++) {
//     if (arr[i] % 2 === 0 && arr[i] % 3 === 0) {
//         console.log(arr[i]);
//     }
// }
 
// 2. Дан массив: `[1, 2, 3, 2, 4, 3, 5, 6, 3, 2, 3]`. Подсчитайте количество 
// цифр 3 в этом массиве.
// let sum = 0;
// const arr = [1, 2, 3, 2, 4, 3, 5, 6, 3, 2, 3];
// for (let i = 0; i < arr.length; i++) {
//     if (arr[i] === 3) {
//         sum += 1;
//     }
// }
// console.log(`Sum: ${sum}`);
 
// 4. Дан массив: `[1, 2, 3, 4, 5]`.
// С помощью метода splice преобразуйте массив в следующий: [1, 4, 5]
// const arr = [1, 2, 3, 4, 5];
// arr.splice(1, 2);
// console.log(`arr: ${arr}`);
 
 
// Задание 5
// В функцию передается число, необходимо из функции вернуть максимальное число, 
// содержащее те же цифры, что и в переданном числе. Если было передано 
// некорректное число, вернуть NaN.
 
// ```js
// function getMax(num) {
 
// }
 
// console.log(getMax(6118)); // 8611
// console.log(getMax(17)); // 71
// console.log(getMax(17.5)); // 751
// console.log(getMax('Привет')); // NaN
// ```
 
// function getMax(num) {
//     const temp = String(num).replace('.', '');;
//     let _num = Number.parseInt(temp);
//     const arr = [];
 
//     while (_num > 0) {
//         const reminder = _num % 10; //  В reminder сохраняем младший разряд.
//         _num = Math.trunc(_num / 10); //  Убираем младший разряд.
//         arr.push(reminder);
//     }
 
//     arr.sort((a, b) => b - a);
 
//     const result = arr.join('');
 
//     return Number.parseInt(result);
// }
 
// console.log(getMax(6118)); // 8611
// console.log(getMax(17)); // 71
// console.log(getMax(17.5)); // 751
// console.log(getMax('Привет')); // NaN
 
// Требуется возвести в квадрат числа, которые стоят на нечетных позициях.
// const arr = [1, 2, 3, 4, 5];
// const arr2 = arr.map((item, idx) => { // Возвращает новый массив.
//     return idx % 2 !== 0 ? item ** 2 : item;
// });
// console.log(`Result: ${arr2}`);
 
// Требуется получить сумму всех значений, который без остатка делятся на 5.
// const arr = [5, 6, 7, 9, 100, -5, 0];
// const arr2 = arr.reduce((acummulator, item) => { // Первое значение - функция, а второе значение с которого будет начинаться аккумулятор.
//     return item % 5 === 0 ? acummulator + item : acummulator;
// }, 0);
// console.log(`Result: ${arr2}`);
 
// const arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
// const filtered = arr.filter((item) => item % 3 === 0); // Принято использовать такие методы.
// console.log(filtered);
